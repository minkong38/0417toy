apiVersion: apps/v1
kind: Deployment
metadata:
  name: shop-deploy
  namespace: aws9d
spec:
  replicas: 1
  selector:
    matchLabels:
      app: shop
  template:
    metadata:
      labels:
        app: shop
    spec:
      nodeName: master            # 테스트용 나중에 지우기
      containers:
        - name: shopctn
          image: shop-test:latest
          imagePullPolicy: Never
          resources:
            requests:
              cpu: "100m"
            limits: 
              cpu: "200m"
          volumeMounts:
          - name: html
            mountPath: /usr/share/nginx/html
      volumes:
        - name: html
          persistentVolumeClaim:
            claimName: shop-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: blog-svc
  namespace: aws9d
spec:
  ports:
  - name: blog
    port: 8081
    protocol: TCP
    targetPort: 80
  selector:
    app: blog
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blog-deploy
  namespace: aws9d
spec:
  replicas: 1
  selector:
    matchLabels:
      app: blog
  template:
    metadata:
      labels:
        app: blog
    spec:
      containers:
        - name: blogctn
          image: blog-test:latest
          imagePullPolicy: Never
          resources:
            requests:
              cpu: "100m"
            limits: 
              cpu: "200m"
          volumeMounts:
          - name: html
            mountPath: /usr/share/nginx/html
      volumes:
        - name: html
          persistentVolumeClaim:
            claimName: blog-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: blog-svc
  namespace: aws9d
spec:
  ports:
  - name: blog
    port: 8081
    protocol: TCP
    targetPort: 80
  selector:
    app: blog

---
apiVersion: v1
kind: Service
metadata:
  name: news-svc
  namespace: aws9d
spec:
  ports:
  - name: news
    port: 8081
    protocol: TCP
    targetPort: 80
  selector:
    app: news
apiVersion: apps/v1
kind: Deployment
metadata:
  name: news-deploy
  namespace: aws9d
spec:
  replicas: 1
  selector:
    matchLabels:
      app: news
  template:
    metadata:
      labels:
        app: news
    spec:
      containers:
        - name: newsctn
          image: news-test:latest
          imagePullPolicy: Never
          resources:
            requests:
              cpu: "100m"
            limits: 
              cpu: "200m"
          volumeMounts:
          - name: html
            mountPath: /usr/share/nginx/html
      volumes:
        - name: html
          persistentVolumeClaim:
            claimName: news-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: news-svc
  namespace: aws9d
spec:
  ports:
  - name: news
    port: 8081
    protocol: TCP
    targetPort: 80
  selector:
    app: news
